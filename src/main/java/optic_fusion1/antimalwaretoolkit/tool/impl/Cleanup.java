package optic_fusion1.antimalwaretoolkit.tool.impl;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import static optic_fusion1.antimalwaretoolkit.Main.LOGGER;
import optic_fusion1.antimalwaretoolkit.tool.Tool;
import optic_fusion1.antimalwaretoolkit.configuration.file.FileConfiguration;
import optic_fusion1.antimalwaretoolkit.configuration.file.YamlConfiguration;

//TODO: Most likely not needed due to switching to SQLite
public class Cleanup extends Tool {

  @Override
  public void run(List<String> args) {
    File file = new File(args.get(0));
    if (!file.getName().endsWith(".yml") || !file.getName().endsWith(".yaml")) {
      LOGGER.info(args.get(0) + " is not a yaml file");
      return;
    }
    FileConfiguration config = YamlConfiguration.loadConfiguration(file);
    config.getConfigurationSection("").getKeys(false).forEach((configurationSection) -> {
      if (config.isList(configurationSection)) {
        List<String> strings = config.getStringList(configurationSection);
        List<String> result = new ArrayList<>();
        strings.stream().filter((string) -> (!result.contains(string))).forEachOrdered((string) -> {
          result.add(string);
        });
        config.set(configurationSection, result);
      } else {
        config.getConfigurationSection(configurationSection).getKeys(true).stream().filter((subConfigurationSection) -> (config.isList(configurationSection + "." + subConfigurationSection))).forEachOrdered((subConfigurationSection) -> {
          List<String> strings = config.getStringList(configurationSection + "." + subConfigurationSection);
          List<String> result = new ArrayList<>();
          strings.stream().filter((string) -> (!result.contains(string))).forEachOrdered((string) -> {
            result.add(string);
          });
          config.set(configurationSection + "." + subConfigurationSection, result);
        });
      }
    });
    try {
      config.save(file);
      LOGGER.info("Cleaned up " + file);
    } catch (IOException ex) {
      ex.printStackTrace();
    }
  }

  @Override
  public String getDescription() {
    return "Removes duplicate entries from the provided .yml or .yaml file";
  }

}
